/**
 * License: https://github.com/nfc-tools/libnfc/blob/master/COPYING
 */

nfc_context *nfc_context_new(void);
void nfc_init(nfc_context **context);
void nfc_exit(nfc_context *context);
void nfc_context_free(nfc_context *context);
nfc_device* nfc_open(nfc_context *context, const nfc_connstring connstring);
int nfc_initiator_init(nfc_device *pnd);
const char* nfc_device_get_name(nfc_device *pnd);
void nfc_perror(const nfc_device *pnd, const char *pcString);
void nfc_close(nfc_device *pnd);
size_t nfc_list_devices(nfc_context *context, nfc_connstring connstrings[], size_t connstrings_len);
int nfc_initiator_select_passive_target(nfc_device *pnd, const nfc_modulation nm, const uint8_t *pbtInitData, const size_t szInitData, nfc_target *pnt);
int nfc_initiator_poll_target(nfc_device *pnd, const nfc_modulation *pnmModulations, const size_t szModulations, const uint8_t uiPollNr, const uint8_t uiPeriod, nfc_target *pnt);
int str_nfc_target(char **buf, const nfc_target *pnt, bool verbose);
void nfc_free(void *p);
const char* str_nfc_modulation_type(const nfc_modulation_type nmt);
const char* str_nfc_baud_rate(const nfc_baud_rate nbr);
int nfc_initiator_target_is_present(nfc_device *pnd, const nfc_target *pnt);
const char *nfc_version(void);
